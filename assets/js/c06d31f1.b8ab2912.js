"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7359],{87442:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=s(74848),r=s(28453);const i={sidebar_position:2,title:"Formula Functions"},a=void 0,l={id:"no-code/customize/formula/functions",title:"Formula Functions",description:"Use operators and functions when building formulas. All functions are available everywhere that you can include a formula such as formula fields, validation rules, approval processes, and workflow rules, unless otherwise specified.",source:"@site/docs/no-code/customize/formula/functions.md",sourceDirName:"no-code/customize/formula",slug:"/no-code/customize/formula/functions",permalink:"/no-code/customize/formula/functions",draft:!1,unlisted:!1,editUrl:"https://github.com/steedos/steedos-docs/tree/master/docs/no-code/customize/formula/functions.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Formula Functions"},sidebar:"platform",previous:{title:"Formula Field Types",permalink:"/no-code/customize/formula/formula-field"},next:{title:"Cross-Object Formula",permalink:"/no-code/customize/formula/cross-object"}},c={},d=[{value:"Mathematical Operators",id:"mathematical-operators",level:2},{value:"+ Addition",id:"-addition",level:3},{value:"- Subtraction",id:"--subtraction",level:3},{value:"* Multiplication",id:"-multiplication",level:3},{value:"/ Division",id:"-division",level:3},{value:"^ Power",id:"-power",level:3},{value:"() Brackets",id:"-brackets",level:3},{value:"Logical Operators",id:"logical-operators",level:2},{value:"= and == (Equal To)",id:"-and--equal-to",level:3},{value:"!= (Not Equal To)",id:"-not-equal-to",level:3},{value:"&lt; (Less Than)",id:"-less-than",level:3},{value:"&gt; (Greater Than)",id:"-greater-than",level:3},{value:"<code>&lt;=</code> (Less Than or Equal To)",id:"-less-than-or-equal-to",level:3},{value:"&gt;= (Greater Than or Equal To)",id:"-greater-than-or-equal-to",level:3},{value:"&amp;&amp; (AND)",id:"-and",level:3},{value:"|| (OR)",id:"-or",level:3},{value:"Text Operators",id:"text-operators",level:2},{value:"&amp; (Concatenation)",id:"-concatenation",level:3},{value:"Date and Time Functions",id:"date-and-time-functions",level:2},{value:"ADDMONTHS",id:"addmonths",level:3},{value:"DATE",id:"date",level:3},{value:"DATEVALUE",id:"datevalue",level:3},{value:"DATETIMEVALUE",id:"datetimevalue",level:3},{value:"DAY",id:"day",level:3},{value:"HOUR",id:"hour",level:3},{value:"MILLISECOND",id:"millisecond",level:3},{value:"MINUTE",id:"minute",level:3},{value:"MONTH",id:"month",level:3},{value:"NOW",id:"now",level:3},{value:"SECOND",id:"second",level:3},{value:"TIMENOW",id:"timenow",level:3},{value:"TIMEVALUE",id:"timevalue",level:3},{value:"TODAY",id:"today",level:3},{value:"WEEKDAY",id:"weekday",level:3},{value:"YEAR",id:"year",level:3},{value:"Logical Functions",id:"logical-functions",level:2},{value:"AND",id:"and",level:3},{value:"BLANKVALUE",id:"blankvalue",level:3},{value:"CASE",id:"case",level:3},{value:"IF",id:"if",level:3},{value:"ISBLANK",id:"isblank",level:3},{value:"NOT",id:"not",level:3},{value:"OR",id:"or",level:3},{value:"Mathematical Functions",id:"mathematical-functions",level:2},{value:"ABS",id:"abs",level:3},{value:"CEILING",id:"ceiling",level:3},{value:"EXP",id:"exp",level:3},{value:"FLOOR",id:"floor",level:3},{value:"LN",id:"ln",level:3},{value:"LOG",id:"log",level:3},{value:"MAX",id:"max",level:3},{value:"MCEILING",id:"mceiling",level:3},{value:"MFLOOR",id:"mfloor",level:3},{value:"MIN",id:"min",level:3},{value:"MOD",id:"mod",level:3},{value:"ROUND",id:"round",level:3},{value:"SQRT",id:"sqrt",level:3},{value:"Text Functions",id:"text-functions",level:2},{value:"BEGINS",id:"begins",level:3},{value:"BR",id:"br",level:3},{value:"CASESAFEID",id:"casesafeid",level:3},{value:"CONTAINS",id:"contains",level:3},{value:"FIND",id:"find",level:3},{value:"HYPERLINK",id:"hyperlink",level:3},{value:"INCLUDES",id:"includes",level:3},{value:"ISPICKVAL",id:"ispickval",level:3},{value:"Text Functions",id:"text-functions-1",level:2},{value:"BEGINS",id:"begins-1",level:3},{value:"LEFT",id:"left",level:3},{value:"LEN",id:"len",level:3},{value:"LOWER",id:"lower",level:3},{value:"LPAD",id:"lpad",level:3},{value:"MID",id:"mid",level:3},{value:"RIGHT",id:"right",level:3},{value:"RPAD",id:"rpad",level:3},{value:"SUBSTITUTE",id:"substitute",level:3},{value:"TEXT",id:"text",level:3},{value:"Advanced Functions",id:"advanced-functions",level:2},{value:"REGEX",id:"regex",level:3},{value:"Text Functions",id:"text-functions-2",level:2},{value:"TRIM",id:"trim",level:3},{value:"UPPER",id:"upper",level:3},{value:"VALUE",id:"value",level:3}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Use operators and functions when building formulas. All functions are available everywhere that you can include a formula such as formula fields, validation rules, approval processes, and workflow rules, unless otherwise specified."}),"\n",(0,t.jsx)(n.p,{children:"Translate mathematical and logical operators and functions for use in formulas. Unless otherwise specified, all functions are applicable in any context where formulas are used, such as formula fields, validation rules, approval processes, and workflow rules."}),"\n",(0,t.jsx)(n.h2,{id:"mathematical-operators",children:"Mathematical Operators"}),"\n",(0,t.jsx)(n.h3,{id:"-addition",children:"+ Addition"}),"\n",(0,t.jsx)(n.p,{children:"Calculates the sum of two values."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Value 1 + Value 2"}),", replacing each value with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numerical"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"Amount + Maint_Amount__c + Services_Amount__c\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula calculates the total of the product Amount, Maintenance Amount, and Service Fees. Note that Maint amount and Service Fees are custom currency fields."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"Monday_Hours__c + Tuesday_Hours__c + Wednesday_Hours__c + Thursday_Hours__c + Friday_Hours__c > 40\n"})}),"\n",(0,t.jsx)(n.p,{children:'Use this formula in a validation rule to display the error message "Total working hours cannot exceed 40 hours" when the sum of hours entered for each workday exceeds 40. This example requires five custom fields for each workday on a custom object.'}),"\n",(0,t.jsx)(n.h3,{id:"--subtraction",children:"- Subtraction"}),"\n",(0,t.jsx)(n.p,{children:"Calculates the difference between two values."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Value 1 - Value 2"}),", combining fields, expressions, or other numerical values to replace each value."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numerical"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"Amount - Discount_Amount__c\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula calculates the difference between the product Amount and the Discount Amount. Note that Discount Amount is a custom currency field."}),"\n",(0,t.jsx)(n.h3,{id:"-multiplication",children:"* Multiplication"}),"\n",(0,t.jsx)(n.p,{children:"Multiplies its values."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Value 1 * Value 2"}),", replacing each value with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numerical"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"Consulting_Days__c * 1200\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula calculates the numerical value of consulting days multiplied by 1200, assuming this formula field is of currency data type and consulting is charged at a rate of $1200 per day. Note that Consulting Days is a custom field."}),"\n",(0,t.jsx)(n.h3,{id:"-division",children:"/ Division"}),"\n",(0,t.jsx)(n.p,{children:"Divides by its value."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Value 1 / Value 2"}),", replacing each value with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numerical"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"AnnualRevenue/ NumberOfEmployees\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula uses the Amount field to calculate the revenue per employee."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"IF(NumberOfOpportunities > 0,  NumberOfWonOpportunities / NumberOfOpportunities, null)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula calculates the win rate of opportunities in a marketing campaign."}),"\n",(0,t.jsx)(n.h3,{id:"-power",children:"^ Power"}),"\n",(0,t.jsx)(n.p,{children:"Raises a number to the power of a specified number."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Number^Integer"}),", replacing the number with merge fields, expressions, or other numerical values, and the integer with merge fields, expressions, or any integer."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numerical"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"NumberOfEmployees^4\n"})}),"\n",(0,t.jsx)(n.p,{children:"Calculates the fourth power of the number of employees."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Avoid using negative integers"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"-brackets",children:"() Brackets"}),"\n",(0,t.jsx)(n.p,{children:"Specifies to first calculate the expressions within the left and right brackets. All other expressions are evaluated using standard operator precedence."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"(Expression 1) Expression 2..."}),", replacing each expression with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"(Unit_Value__c - Old_Value__c) / New_Value__c\n"})}),"\n",(0,t.jsx)(n.p,{children:"Calculates the difference between the old and new values, divided by the new value."}),"\n",(0,t.jsx)(n.h2,{id:"logical-operators",children:"Logical Operators"}),"\n",(0,t.jsx)(n.h3,{id:"-and--equal-to",children:"= and == (Equal To)"}),"\n",(0,t.jsx)(n.p,{children:"Calculates whether two values are equal. The = and == operators are interchangeable."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Expression 1 = Expression 2 or Expression 1 == Expression 2"}),", replacing each expression with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ExpiringDate = CreatedDate + 5\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns true if the expiration date equals the sum of the record's creation date and five days."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"IF(Probability = 1, ROUND(Amount*0.02, 2), 0)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula calculates the commission amount. Opportunities with a 100% probability are calculated at 2% commission. All other opportunities have a commission value of zero."}),"\n",(0,t.jsx)(n.p,{children:"Opportunities with a 90% Probability will not receive a commission."}),"\n",(0,t.jsx)(n.p,{children:"Opportunities with a 100% Probability and an Amount of $100,000 will receive a $2,000 commission."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Do not use this function for null comparisons, such as MyDateTime__c == null. Instead, use ISBLANK."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"-not-equal-to",children:"!= (Not Equal To)"}),"\n",(0,t.jsx)(n.p,{children:"Calculates whether two values are not equal."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Expression 1 <> Expression 2"})," or ",(0,t.jsx)(n.code,{children:"Expression 1 != Expression 2"}),", replacing each expression with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(Maint_Amount__c + Services_Amount__c != Amount, "DISCOUNTED", "FULL PRICE")\n'})}),"\n",(0,t.jsx)(n.p,{children:'If the sum of the product\'s maintenance and service amounts is not equal to the product amount, this formula will display "DISCOUNTED" on the product. Otherwise, it shows "FULL PRICE". Note that this example uses two custom currency fields for Maint Amount and Services Amount.'}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Do not use this function for null comparisons, such as MyDateTime__c != null. Instead, use ISBLANK."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"-less-than",children:"< (Less Than)"}),"\n",(0,t.jsx)(n.p,{children:"Calculates whether a value is less than the value following this symbol."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Value 1 < Value 2"}),", replacing each value with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"IF(AnnualRevenue < 1000000, 1, 2)\n"})}),"\n",(0,t.jsx)(n.p,{children:'Assigns the value "1" to revenue less than a million, and the value "2" to revenue greater than a million.'}),"\n",(0,t.jsx)(n.h3,{id:"-greater-than",children:"> (Greater Than)"}),"\n",(0,t.jsx)(n.p,{children:"Calculates whether a value is greater than the value following this symbol."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Value 1 > Value 2"}),", replacing each value with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(commission__c > 1000000, "High Net Worth", "General")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Assigns the "High Net Worth" value to commissions greater than a million. Note that this is a text formula field using the commission custom field.'}),"\n",(0,t.jsxs)(n.h3,{id:"-less-than-or-equal-to",children:[(0,t.jsx)(n.code,{children:"<="})," (Less Than or Equal To)"]}),"\n",(0,t.jsx)(n.p,{children:"Calculates whether a value is less than or equal to the value following this symbol."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Value 1 <= Value 2"}),", replacing each value with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"IF(AnnualRevenue <= 1000000, 1, 2)\n"})}),"\n",(0,t.jsx)(n.p,{children:'Assigns the value "1" to revenue less than or equal to a million, and the value "2" to revenue greater than a million.'}),"\n",(0,t.jsx)(n.h3,{id:"-greater-than-or-equal-to",children:">= (Greater Than or Equal To)"}),"\n",(0,t.jsx)(n.p,{children:"Calculates whether a value is greater than or equal to the value following this symbol."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Value 1 >= Value 2"}),", replacing each value with merge fields, expressions, or other numerical values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(Commission__c >= 1000000, "YES", "NO")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Assigns the value "YES" to commissions greater than or equal to a million. Note that this is a text formula field using the custom currency field Commission.'}),"\n",(0,t.jsx)(n.h3,{id:"-and",children:"&& (AND)"}),"\n",(0,t.jsx)(n.p,{children:"Evaluates whether both of two values or expressions are true. Use this operator as an alternative to the logical function AND."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Logic 1 && Logic 2"}),", replacing Logic 1 and Logic 2 with the values or expressions you wish to evaluate."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF((Price<100 && Quantity<5), "Small", null)\n'})}),"\n",(0,t.jsx)(n.p,{children:'If the price is less than 100 and the quantity is less than five, this formula displays "Small". Otherwise, this field is empty.'}),"\n",(0,t.jsx)(n.h3,{id:"-or",children:"|| (OR)"}),"\n",(0,t.jsx)(n.p,{children:"Evaluates whether at least one of multiple values or expressions is true. Use this operator as an alternative to the logical function OR."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"Logic 1 || Logic 2"}),", replacing any number of logic references with the values or expressions you wish to evaluate."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(Priority = "High" || Status = "New", ROUND(NOW()-CreatedDate, 0), null)\n'})}),"\n",(0,t.jsx)(n.p,{children:'If the case Status is "New" or Priority is "High", this formula returns the number of days the case has been unprocessed. If the case was opened today, the field shows zero.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"Discount_Rate__c < 0 || Discount_Rate__c > 0.40\n"})}),"\n",(0,t.jsx)(n.p,{children:'When the custom field Discount Rate\'s value is not between 0 and 40%, this validation rule formula displays the error message: "Discount Rate cannot exceed 40%."'}),"\n",(0,t.jsx)(n.h2,{id:"text-operators",children:"Text Operators"}),"\n",(0,t.jsx)(n.h3,{id:"-concatenation",children:"& (Concatenation)"}),"\n",(0,t.jsx)(n.p,{children:"Connects two or more strings."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"String 1 & String 2"}),", replacing each string with merge fields, expressions, or other values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'"Expense-" & Trip_Name__c & "-" & ExpenseNum__c\n'})}),"\n",(0,t.jsx)(n.p,{children:"This formula displays the text \u201cExpense-\u201d before the trip name and expense number. It is a text formula field using the custom field Expense Number."}),"\n",(0,t.jsx)(n.h2,{id:"date-and-time-functions",children:"Date and Time Functions"}),"\n",(0,t.jsx)(n.h3,{id:"addmonths",children:"ADDMONTHS"}),"\n",(0,t.jsx)(n.p,{children:"Returns the date before or after a specified number of months from the given date. If the remaining month has fewer days than the start month, the function returns the last day of the remaining month. Otherwise, the result includes the same day component as the specified date."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"ADDMONTHS(date/datetime, number)"}),", replace ",(0,t.jsx)(n.code,{children:"date/datetime"})," and ",(0,t.jsx)(n.code,{children:"number"})," with the start date and the number of months to be added."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Date, Datetime:"})," ",(0,t.jsx)(n.code,{children:"date/datetime"})," Date or datetime representing the start date."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Number:"})," ",(0,t.jsx)(n.code,{children:"number"})," Numeric value representing the number of months to add."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Date"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ADDMONTHS(StartDate, 5)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Adds 5 months to the start date. For example, if the start date is September 20, 2017, the result date is February 20, 2018; if the start date is September 30, 2017, the result date is February 28, 2018."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"Supports passing date or datetime type parameters, but the return value is always a date type, not a datetime type."})}),"\n",(0,t.jsx)(n.h3,{id:"date",children:"DATE"}),"\n",(0,t.jsx)(n.p,{children:"Returns a date value from the year, month, and day values you enter. If the DATE function value in a formula field is an invalid date, it returns an error message."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"DATE(year, month, day)"}),", replace year with a four-digit year, month with a two-digit month, and day with a two-digit day."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Year:"})," ",(0,t.jsx)(n.code,{children:"number"})," Four-digit year."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Month:"})," ",(0,t.jsx)(n.code,{children:"number"})," Numeric value representing the month."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Day:"})," ",(0,t.jsx)(n.code,{children:"number"})," Numeric value representing the day."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Date"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"DATE(2005, 1, 2)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Creates a date field for January 2, 2005."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsxs)(n.p,{children:["The number of parameters must be three, and formats like ",(0,t.jsx)(n.code,{children:"2005-01-01"})," are not supported."]})}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"If the function parameters are formatted correctly but the values are not standard, it will not return an error but a possibly incorrect value, like DATE(2021, 2, 29) will return 2021-03-01, and DATE(2021, 121, 29) will return 2031-01-29."})}),"\n",(0,t.jsx)(n.h3,{id:"datevalue",children:"DATEVALUE"}),"\n",(0,t.jsx)(n.p,{children:"Returns a date value for date, datetime, or text expressions."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," DATEVALUE(expression)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.code,{children:"date/datetime/text"})," Merge field or expression of date, datetime, or text in date/datetime format"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Date"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"DATEVALUE(ClosedDate)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Displays a date value based on the ClosedDate datetime field value. The parameter ClosedDate can be a date, datetime type, or a string type in date/datetime format."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'DATEVALUE("2005-1-15 12:30")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns the date value "2005-01-15".'}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"\u25a0 If the field referenced in this function is not a valid text or datetime field, the field in this formula might display as an abnormal string or error message, like DATEVALUE(\"2005-111-15\") will return NaN-NaN-NaN.\n\u25a0 When entering dates, please put the date in quotes and use the following format: YYYY-MM-DD, i.e., four-digit year, two-digit month, and two-digit day.\n\u25a0 If the expression is not within a valid date range (for example, MM is not between 01 and 12), the field in this formula will display \"NaN-NaN-NaN\".\n\u25a0 This formula always returns a value at 0 hours UTC time, and unless the entered parameter explicitly includes time zone information, it will always use the user's time zone to calculate, like DATEVALUE('2018-12-12 06:06:06') returns 2018-12-11, and DATEVALUE('2018-12-12T06:06:06Z') returns 2018-12-12."})}),"\n",(0,t.jsx)(n.h3,{id:"datetimevalue",children:"DATETIMEVALUE"}),"\n",(0,t.jsx)(n.p,{children:"Returns the year, month, day, and GMT time value."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," DATETIMEVALUE(expression)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.code,{children:"text"})," Text value in date/datetime format without TZ character, merge field, or expression"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Datetime"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"DATETIMEVALUE(TEXT(ClosedDate))\n"})}),"\n",(0,t.jsx)(n.p,{children:"Displays a datetime value based on the ClosedDate field value, where the parameter ClosedDate must be a date type and not a datetime type, as TEXT(ClosedDate) returns a string like \"2020-11-04 03:45:00Z\" with a 'Z' character for datetime types."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'DATETIMEVALUE(SUBSTITUTE(TEXT(ClosedDate), "Z", ""))\n'})}),"\n",(0,t.jsx)(n.p,{children:"Displays a datetime value based on the ClosedDate field value, where the parameter ClosedDate can be a date or time type, as this example removes the final 'Z' character."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'DATETIMEVALUE("2005-11-15 17:00:00")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns the date and time value "2005-11-15T17:00:00.000Z" (i.e., UTC time 17:00:00 on November 15, 2005).'}),"\n",(0,t.jsx)(n.h3,{id:"day",children:"DAY"}),"\n",(0,t.jsx)(n.p,{children:"Returns a number between 1 and 31 representing the day of the month."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," DAY(date)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," date Date field or value (such as TODAY())"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"DAY(Code_Freeze__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:'Returns the day from your custom Code Freeze date. Note that this does not apply to "datetime" fields.'}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:'Only supports date type values, does not support "datetime" type values, nor string type values.'})}),"\n",(0,t.jsx)(n.h3,{id:"hour",children:"HOUR"}),"\n",(0,t.jsx)(n.p,{children:"Returns the hour value in 24-hour format (0~23) for the GMT time zone."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"HOUR(datetime)"}),", replace datetime with a datetime value or values like DATETIMEVALUE(), does not support string parameters."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," datetime Datetime field or value (such as NOW())"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"HOUR(ClosedDate)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Displays only the hour from the datetime ClosedDate field."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"HOUR(DATETIMEVALUE('2018-12-12 18:06:08'))\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns 18, not 10."}),"\n",(0,t.jsx)(n.h3,{id:"millisecond",children:"MILLISECOND"}),"\n",(0,t.jsx)(n.p,{children:"Returns a number between 0 and 999 representing the millisecond value."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"MILLISECOND(datetime)"}),", replace datetime with a datetime value, such as NOW(), does not support date type or string parameters."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," datetime Datetime field or value (such as NOW())"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'MILLISECOND(DATETIMEVALUE(SUBSTITUTE(TEXT(ClosedDate), "Z", "")))\n'})}),"\n",(0,t.jsx)(n.p,{children:"Displays only the millisecond value from the datetime field of ClosedDate."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MILLISECOND(NOW())\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the current time's millisecond value, such as 125."}),"\n",(0,t.jsx)(n.h3,{id:"minute",children:"MINUTE"}),"\n",(0,t.jsx)(n.p,{children:"Returns a number between 0 and 60 representing the minute value."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"MINUTE(datetime)"}),", replace datetime with a datetime value, such as NOW(), does not support date type or string parameters."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," datetime Datetime field or value (such as NOW())"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'MINUTE(DATETIMEVALUE(SUBSTITUTE(TEXT(ClosedDate), "Z", "")))\n'})}),"\n",(0,t.jsx)(n.p,{children:"Displays only the minute value from the datetime field of ClosedDate."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MINUTE(NOW())\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the current time's minute value, such as 12."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"The MINUTE function only accepts datetime types as parameters, does not support time, date, or text types. Use the DATETIMEVALUE function for type conversion before calling this function."})}),"\n",(0,t.jsx)(n.h3,{id:"month",children:"MONTH"}),"\n",(0,t.jsx)(n.p,{children:"Returns the month as a number from a given date, between 1 (January) and 12 (December)."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"MONTH(date)"}),", replace date with the field or expression containing the month you wish to return."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," date Date field or value (such as TODAY())"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MONTH(SLAExpirationDate__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the month of your Service Level Agreement expiration. This example uses a custom date field named SLA Expiration Date."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MONTH(TODAY())\n"})}),"\n",(0,t.jsx)(n.p,{children:'Returns the current month in numeric format. For instance, for the month "February," it returns the value "2".'}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"The MONTH function only accepts date types as parameters, does not support time, datetime, or text types. Use the DATEVALUE function for type conversion before calling this function."})}),"\n",(0,t.jsx)(n.h3,{id:"now",children:"NOW"}),"\n",(0,t.jsx)(n.p,{children:"Returns the current date and time."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"NOW()"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Datetime"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(Status = "Open", ROUND(NOW()-CreatedDate, 0), null)\n'})}),"\n",(0,t.jsx)(n.p,{children:"This formula checks whether a lead is unprocessed; if so, it calculates the number of days unprocessed by subtracting the creation date and time from the current date and time. The result is the number of unprocessed days rounded to zero decimal places. If the lead is processed, this field is empty."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:'\u25a0 Do not remove the parentheses.\n\u25a0 Keep the parentheses empty. They should not contain values.\n\u25a0 The NOW function returns a \u201cdatetime\u201d field, not a \u201cdate\u201d field. The Created Date and Last Modified Date are \u201cdate/time\u201d fields, while the Last Activity Date is a \u201cdate\u201d field.\n\u25a0 If you want to use a \u201cdate\u201d field, use the TODAY function.\n\u25a0 The date and time are always calculated based on the user\'s timezone, and the function itself returns UTC time values, such as "2020-11-07T07:28:00Z" for Beijing time 2020-11-07 15:28.\n\u25a0 Use the NOW function with other \u201cdatetime\u201d fields and addition/subtraction operators to return a number representing days. For example, NOW() - CreatedDate calculates the number of days since a record\u2019s creation date. In this example, the formula field data type is numeric.\n\u25a0 Use the NOW function with a number to return a date and time. For example, NOW() + 5 calculates the date and time five days prior to the current time. In this example, the formula field data type is \u201cdatetime\u201d.'})}),"\n",(0,t.jsx)(n.h3,{id:"second",children:"SECOND"}),"\n",(0,t.jsx)(n.p,{children:"Returns the second value in a range from 0 to 60."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"SECOND(datetime)"}),", replace datetime with a datetime value or values like DATETIMEVALUE(), does not support date type or string parameters."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," datetime Datetime field or value (such as NOW())"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"SECOND(ClosedDate)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Displays only the second value from the datetime field of ClosedDate."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"SECOND(DATETIMEVALUE('2018-12-12 18:06:08'))\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns 8."}),"\n",(0,t.jsx)(n.h3,{id:"timenow",children:"TIMENOW"}),"\n",(0,t.jsx)(n.p,{children:"Returns the current time value (GMT). If you only want to track time and not the date, use this function instead of NOW."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"TIMENOW()"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Time"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(Rating="Hot", TEXT(TIMENOW()), TEXT(TIMEVALUE(CreatedDate)))\n'})}),"\n",(0,t.jsx)(n.p,{children:'This formula checks and understands if a lead is rated as "Hot"; if so, it returns the correct time. Otherwise, it returns the time since someone created the lead.'}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"\u25a0 Do not remove the parentheses.\n\u25a0 Keep the parentheses empty. They should not contain values.\n\u25a0 If you want to use a \u201cdate\u201d field, use the TODAY function.\n\u25a0 The displayed value is in the GMT time zone.\n\u25a0 Since Steedos does not yet support time type fields, only text values can be output with the TEXT function."})}),"\n",(0,t.jsx)(n.h3,{id:"timevalue",children:"TIMEVALUE"}),"\n",(0,t.jsx)(n.p,{children:"Returns a local time value without a date, such as working hours."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"TIMEVALUE(value)"}),", replace value with a text value, merge field, or expression in time format."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," text String in time format, such as 17:30:45.125"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Time"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'TEXT(TIMEVALUE("17:30:45.125"))\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns "17:30:45.125".'}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"\u25a0 Do not use TIMEVALUE with datetime fields.\n\u25a0 Since Steedos does not yet support time type fields, only text values can be output with the TEXT function."})}),"\n",(0,t.jsx)(n.h3,{id:"today",children:"TODAY"}),"\n",(0,t.jsx)(n.p,{children:"Returns the current date as a date data type."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"TODAY()"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Date"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"TODAY()-Sample_date_c\n"})}),"\n",(0,t.jsx)(n.p,{children:"Calculates how many more days are left in the sample."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"SampleDate < TODAY()\n"})}),"\n",(0,t.jsx)(n.p,{children:"This example ensures users cannot change the Sample Date to a past date."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"\u25a0 Do not remove the parentheses.\n\u25a0 Keep the parentheses empty. They should not contain values.\n\u25a0 Use the TODAY function in \u201cdate\u201d fields, not \u201cdatetime\u201d fields. Last Activity Date is a \u201cdate\u201d field; Created Date and Last Modified Date are \u201cdatetime\u201d fields.\n\u25a0 If you want to use a datetime field, refer to the NOW function.\n\u25a0 The date is always calculated based on the user's timezone, and TODAY() returns the value of 0 hours GMT for that day.\n\u25a0 Use the TODAY function with other \u201cdate\u201d fields and addition/subtraction operators to return a number representing days. For example, TODAY()-LastActivityDate calculates the number of days since the last activity date. In this example, the formula field data type is numeric.\n\u25a0 Use the TODAY function with a number to return a date. For example, TODAY() +5 calculates the date five days before today. In this example, the formula field data type is a date."})}),"\n",(0,t.jsx)(n.h3,{id:"weekday",children:"WEEKDAY"}),"\n",(0,t.jsx)(n.p,{children:"Returns the day of the week for a specified date, with 1 representing Sunday, 2 representing Monday, and so on up to 7 for Saturday."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"WEEKDAY(date)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," date Date field or value (such as TODAY())"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"WEEKDAY(customdate1__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the day of the week for a specified date using customdate1__c."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"\u25a0 This function only supports date type values, not datetime or string type values as parameters.\n\u25a0 This function differs from the JavaScript programming language's Date.getDay function, which uses 0 for Sunday, 1 for Monday, and so on up to 6 for Saturday."})}),"\n",(0,t.jsx)(n.h3,{id:"year",children:"YEAR"}),"\n",(0,t.jsx)(n.p,{children:"Returns the year in numeric format as a four-digit number for a given date."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ",(0,t.jsx)(n.code,{children:"YEAR(date)"}),", replace date with the field or expression containing the year you wish to return."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," date Date field or value (such as TODAY())"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"YEAR(TODAY()) - YEAR(Initial_Meeting__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the number of years since your initial meeting with a client. This example uses a custom date field named Initial Meeting."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"\u25a0 This function only supports date type values, not datetime or string type values as parameters.\n\u25a0 This function is consistent with the JavaScript programming language's Date.getYear function."})}),"\n",(0,t.jsx)(n.h2,{id:"logical-functions",children:"Logical Functions"}),"\n",(0,t.jsx)(n.h3,{id:"and",children:"AND"}),"\n",(0,t.jsx)(n.p,{children:"Returns TRUE if all values are true, and FALSE if one or more values are false. This function is an alternative to the && (AND) operator."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," AND(logical1, logical2...)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Logical Expression 1:"})," ",(0,t.jsx)(n.code,{children:"boolean"})," The first formula expression you want to evaluate that returns a Boolean value."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Logical Expression 2:"})," ",(0,t.jsx)(n.code,{children:"boolean"})," The second formula expression you want to evaluate that returns a Boolean value."]}),"\n",(0,t.jsx)(n.li,{children:"... Additional expressions that return Boolean values."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(AND(Price<1,Quantity<1),"Small", null)\n'})}),"\n",(0,t.jsx)(n.p,{children:'This formula displays "Small" if both price and quantity are less than 1. If either the price or quantity of an asset is greater than 1, this field is empty.'}),"\n",(0,t.jsx)(n.h3,{id:"blankvalue",children:"BLANKVALUE"}),"\n",(0,t.jsx)(n.p,{children:"Determines if an expression has a value and returns a substitute expression if it does not. If the expression has a value, it returns the value of the expression."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," BLANKVALUE(expression, substitute expression)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Expression:"})," ",(0,t.jsx)(n.code,{children:"text/number/date/datetime"})," The expression you want to evaluate, supports common field types except Boolean."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Substitute Expression:"})," ",(0,t.jsx)(n.code,{children:"text/number/date/datetime"})," The value you wish to replace any blank values with, should be the same data type as the first parameter, otherwise, it returns an error."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," The same data type as the passed parameters"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'BLANKVALUE(Department, "Undesignated")\n'})}),"\n",(0,t.jsx)(n.p,{children:'If the department field contains a value, this formula returns the value of the department field. If the department field is empty, this formula returns "Undesignated."'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"BLANKVALUE(Payment_Due_Date__c, StartDate + 5)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula returns the date five days after the start date of the contract when Payment Due Date is empty. Payment Due Date is a custom date field."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If a field contains characters, white space, or zero, then the field is not empty. For example, if a field contains a space inserted with the space bar, then the field is not empty."}),"\n",(0,t.jsx)(n.li,{children:"If a field has no value, the BLANKVALUE function returns the value of the specified substitute expression; if you just want to check if a field has a value, use the ISBLANK function."}),"\n",(0,t.jsx)(n.li,{children:"The two parameters passed must be of the same data type, otherwise, the formula will return an error directly."}),"\n",(0,t.jsx)(n.li,{children:"The parameters do not support Boolean values."}),"\n",(0,t.jsx)(n.li,{children:"The parameters do not support select field types."}),"\n",(0,t.jsxs)(n.li,{children:["If you judge a numeric field for a blank value, such as ",(0,t.jsx)(n.code,{children:"BLANKVALUE(Amount, 100)"}),", the formula only returns the value of the specified substitute expression if the field has no value and is configured to treat blank fields as blank. If the field has no value and is configured to treat blank fields as 0, it returns 0 instead of the specified substitute expression value."]}),"\n",(0,t.jsx)(n.li,{children:'Since our default blank field handling method is "treat blank fields as zero," be careful in low-code, if you do not configure this attribute, the default is to treat it as 0 value. In zero-code configuration, there is no problem because the blank field handling attribute is mandatory and there is no default value problem.'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 This function is similar to ISBLANK, but it further returns the value of the substitute expression when the field value is empty. Generally, if you just want to determine if the field value is empty, you should use the latter instead of this function."}),(0,t.jsxs)(n.p,{children:["\u25a0 This function does not support select field type parameters, but if the field is single-select, you can first convert the select type to text type with the TEXT function, such as ",(0,t.jsx)(n.code,{children:'BLANKVALUE(TEXT(Leave__c), "error")'}),". The multi-select select field type cannot use the BLANKVALUE function."]})]}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"text"}),": ",(0,t.jsx)(n.code,{children:'BLANKVALUE(FieldName, "Replacement Value")'})]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"select"}),": ",(0,t.jsx)(n.code,{children:"IF(ISBLANK(FieldName), Replacement Value, FieldName)"})]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"number/currency"}),": ",(0,t.jsx)(n.code,{children:'BLANKVALUE(FieldName, "Replacement Value")'})]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"date/datetime"}),": ",(0,t.jsx)(n.code,{children:'BLANKVALUE(FieldName, "Replacement Value")'})]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"lookup/master_detail"}),": ",(0,t.jsx)(n.code,{children:'BLANKVALUE(FieldName._id, "Replacement ID Value")'})]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"boolean"}),": ",(0,t.jsx)(n.code,{children:"IF(FieldName, ValueA, ValueB)"})]}),"\n"]})}),"\n",(0,t.jsx)(n.h3,{id:"case",children:"CASE"}),"\n",(0,t.jsx)(n.p,{children:"Checks a given expression against a series of values. If the expression equals one of the values, it returns the corresponding result. If it does not equal any of the values, it returns an alternate result."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," CASE(expression, value1, result1, value2, result2, ..., other result), replace the expression with the field or value you want to compare to each specified value. Each value and result must be replaced with equal values to return a result item. Replace other result with the value you wish to return when the expression does not equal any of the values."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Expression:"})," ",(0,t.jsx)(n.code,{children:"text/number/currency/percent/date/datetime/select"})," The field or value to compare against each specified value."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Value1:"})," ",(0,t.jsx)(n.code,{children:"text/number/currency/percent/date/datetime"})," The first value to compare against the first parameter value."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Result1:"})," ",(0,t.jsx)(n.code,{children:"text/number/currency/percent/date/datetime"}),' The result value returned when the first parameter value equals the "Value1" parameter.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Value2:"})," ",(0,t.jsx)(n.code,{children:"text/number/currency/percent/date/datetime"})," The second value to compare against the first parameter value."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Result2:"})," ",(0,t.jsx)(n.code,{children:"text/number/currency/percent/date/datetime"}),' The result value returned when the second parameter value equals the "Value2" parameter.']}),"\n",(0,t.jsx)(n.li,{children:"..."}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Other Result:"})," ",(0,t.jsx)(n.code,{children:"text/number/currency/percent/date/datetime"})," The result value returned when the expression does not equal any of the previous parameter values."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," The same data type as the last parameter"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Formula Field Examples:"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"1. Days Case Unhandled"})})}),"\n",(0,t.jsx)(n.p,{children:"This is an example of a custom formula field, Days Open, that displays different text based on the number of days a case has been unhandled:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'CASE(Days_Open__c, 3, "Reassign", 2, "Assign Task", "Maintain")\n'})}),"\n",(0,t.jsx)(n.p,{children:"Displays the following text:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'"Reassign" for any case unhandled for three days.'}),"\n",(0,t.jsx)(n.li,{children:'"Assign Task" for any case unhandled for two days.'}),"\n",(0,t.jsx)(n.li,{children:'"Maintain" for all other cases.'}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"2. Month of Last Activity"})})}),"\n",(0,t.jsx)(n.p,{children:'This formula field displays the month of the last activity or "None" if there is no activity:'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'CASE(MONTH(LastActivityDate),\n1, "January",\n2, "February",\n3, "March",\n4, "April",\n5, "May",\n6, "June",\n7, "July",\n8, "August",\n9, "September",\n10, "October",\n11, "November",\n12, "December",\n"None")\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Default Value Examples:"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"1. Discount Rate"})})}),"\n",(0,t.jsx)(n.p,{children:"Use the following default value formula to insert a different discount rate in an opportunity based on the department of the person who created the opportunity:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'CASE(User.Department, "IT", 0.25, "Field", 0.15, 0)\n'})}),"\n",(0,t.jsx)(n.p,{children:'In this example, the formula inserts a 25% discount rate for all opportunities created by users in the "IT" department, or a 15% discount rate for all opportunities created by personnel in the "Field" department. If the creator does not belong to either of these departments, the discount rate is zero. This is a custom percentage field in the opportunity using the standard user field Department.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"2. Product Language"})})}),"\n",(0,t.jsx)(n.p,{children:'You might want to associate products with their language so users know what type of documentation or adapters to include. Use the following default value formula to automatically set the language of a product based on the country of the user who created it. In this example, if the user\'s country is "Japan," the default value is "Japanese"; if the user\'s country is "US," the default value is "English." If neither, the default value "unknown" is inserted into the product language field.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'CASE($User.Country, "Japan", "Japanese", "US", "English", "unknown")\n'})}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsxs)(n.p,{children:["\u25a0 Ensure your ",(0,t.jsx)(n.code,{children:"value1"}),", ",(0,t.jsx)(n.code,{children:"value2"}),", etc., expressions are of the same data type and must match the data type of the first parameter value."]}),(0,t.jsxs)(n.p,{children:["\u25a0 Ensure your ",(0,t.jsx)(n.code,{children:"result1"}),", ",(0,t.jsx)(n.code,{children:"result2"}),", etc., expressions, and the final ",(0,t.jsx)(n.code,{children:"other result"})," expression are of the same data type, but they do not need to match the data type of the first parameter value, and they often do not."]}),(0,t.jsx)(n.p,{children:"\u25a0 The CASE function cannot include parameters that return a Boolean type, i.e., true or false. Instead, ensure true or false expressions return a supported data type, for example:"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'CASE(1, IF(ISPICKVAL(Term__c,"12"), 1, 0), 12 * Monthly_Commit__c, IF(ISPICKVAL(Term__c,"24"), 1, 0), 24 * Monthly_Commit__c, 0)'})}),(0,t.jsx)(n.p,{children:'In this formula, Term is a picklist field, and when it contains the value 1, representing true, it multiplies with "Monthly Commit."'}),(0,t.jsx)(n.p,{children:"\u25a0 Include an other result value."}),(0,t.jsxs)(n.p,{children:["\u25a0 If any expression returns an error, the ",(0,t.jsx)(n.code,{children:"CASE"})," function will also return an error, even if other expressions return correct values. For example, in ",(0,t.jsx)(n.code,{children:'CASE(Field__c, "Partner", "P", "Customer", "C", LEFT(Field__c, -5))'}),', even if the field\'s value is "Partner" or "Customer," the formula will return an error due to the illogical last statement.']}),(0,t.jsxs)(n.p,{children:["\u25a0 If the field in the CASE function is empty, it returns the other result value. For example, if the Days Open field is empty, 0, or any value other than 2 and 3, ",(0,t.jsx)(n.code,{children:'CASE(Days_Open__c, 3, "Reassign", 2, "Assign Task", "Maintain")'}),' will display "Maintain."']}),(0,t.jsxs)(n.p,{children:["\u25a0 Use the CASE function to determine if a picklist value equals a specific value. For example, when Term is 12, ",(0,t.jsx)(n.code,{children:'CASE(Term__c, "12", 12 * Monthly_Commit__c, "24", 24 * Monthly_Commit__c, 0)'})," multiplies Monthly Commit by 12; when Term is 24, it multiplies by 24. Otherwise, the result is zero."]})]}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No parameter in the CASE function supports Boolean values. This means not only the first parameter and subsequent comparison values cannot be Boolean, but also the last parameter cannot be Boolean, meaning the entire function's return value cannot be a Boolean."}),"\n",(0,t.jsx)(n.li,{children:"The expression parameter, i.e., the first parameter, supports select fields, but only single-select. Passing a multi-select select will result in an error."}),"\n"]})}),"\n",(0,t.jsx)(n.h3,{id:"if",children:"IF"}),"\n",(0,t.jsx)(n.p,{children:"Determines if an expression is true or false. If true, it returns a given value; if false, it returns another value."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," IF(logical test, value_if_true, value_if_false)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Logical Expression:"})," ",(0,t.jsx)(n.code,{children:"boolean"})," A logical expression that ultimately returns a Boolean value."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Value_if_true:"})," ",(0,t.jsx)(n.code,{children:"text/number/currency/percent/date/datetime"})," The value you wish to return when the expression is true, supports common field types except Boolean."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Value_if_false:"})," ",(0,t.jsx)(n.code,{children:"text/number/currency/percent/date/datetime"})," The value you wish to return when the expression is false, supports common field types except Boolean."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," The same data type as the first and second parameters"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Formula Field Examples:"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"1. Payment Overdue"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(AND(Payment_Due_Date__c < TODAY(), Payment_Status__c = "UNPAID"), "PAYMENT OVERDUE", null)\n'})}),"\n",(0,t.jsx)(n.p,{children:'This formula determines whether the payment due date has passed and whether the payment status is "UNPAID." If so, it returns the text "PAYMENT OVERDUE"; otherwise, it keeps the field empty. This example uses a custom date field named Payment Due Date and a custom text field named Payment Status.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"2. Inserting Tax Rate"})})}),"\n",(0,t.jsx)(n.p,{children:"Use this default value formula to set the tax rate of an asset based on the city of the user. Create a custom percentage field using the following default value:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'IF($user.city = "Napa", 0.0750, IF($user.city = "Paso Robles", 0.0725, IF($user.city = "Sutter Creek", 0.0725, IF($user.city = "Los Olivos", 0.0750, IF($user.city = "Livermore", 0.0875, null )))))\n'})}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure that your value_if_true and value_if_false expressions are of the same data type and are not Boolean values."}),"\n",(0,t.jsx)(n.li,{children:"The IF function does not support Boolean values as return values, i.e., the second and third parameters cannot be Boolean."}),"\n"]})}),"\n",(0,t.jsx)(n.h3,{id:"isblank",children:"ISBLANK"}),"\n",(0,t.jsx)(n.p,{children:"Determines whether an expression has a value, returning TRUE if it does not. If it contains a value, the function returns FALSE."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ISBLANK(expression)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.code,{children:"text/number/date/datetime/select"})," The expression you want to evaluate."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"((IF(ISBLANK(Maint_Amount__c), 0, 1) + IF(ISBLANK(Services_Amount__c), 0, 1) + IF(ISBLANK(Discount_Percent__c), 0, 1) + IF(ISBLANK(Amount), 0, 1) + IF(ISBLANK(Timeline__c), 0, 1)) / 5\n"})}),"\n",(0,t.jsx)(n.p,{children:'This formula extracts a set of fields and calculates the percentage used by the personnel. It checks five fields to see if they are empty. If empty, that field counts as 0. For any field containing a value, it counts "1," and the total is divided by five (the number of fields calculated). This formula requires selecting the "treat blank fields as blank" option under "blank field handling," otherwise ISBLANK will always return FALSE.'}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsxs)(n.p,{children:["\u25a0 Do not use expressions like ",(0,t.jsx)(n.code,{children:"MyDateTime__c == null"})," to determine blank values; use ",(0,t.jsx)(n.code,{children:"ISBLANK(MyDateTime__c)"})," instead."]}),(0,t.jsx)(n.p,{children:"\u25a0 If a field contains characters, white space, or zero, it is not empty. For example, if a field contains a space inserted with the space bar, then the field is not empty."}),(0,t.jsx)(n.p,{children:"\u25a0 If a field has no value, use the BLANKVALUE function to return the specified expression; if you just want to check if a field has a value, use the ISBLANK function."}),(0,t.jsxs)(n.p,{children:["\u25a0 If you use this function on a numeric field, like ",(0,t.jsx)(n.code,{children:"ISBLANK(Amount)"}),", the function returns TRUE only if the field has no value and is configured to treat blank fields as blank."]}),(0,t.jsx)(n.p,{children:'\u25a0 Since our default blank field handling method is "treat blank fields as zero," be careful in low-code, as by default, it is treated as 0 value. In zero-code configuration, there is no problem as the blank field handling attribute is mandatory and has no default value.'}),(0,t.jsx)(n.p,{children:"\u25a0 For select field types, the syntax for single and multi-select is the same, just pass the parameter value directly."})]}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"ISBLANK function returns a Boolean value but does not support parameters that are themselves Boolean values."})}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"text/select"}),": ",(0,t.jsx)(n.code,{children:"ISBLANK(FieldName)"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"number/currency"}),": ",(0,t.jsx)(n.code,{children:"ISBLANK(FieldName)"}),", but only effective when configured to treat blank fields as blank, otherwise always returns false."]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"date/datetime"}),": ",(0,t.jsx)(n.code,{children:"ISBLANK(FieldName)"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"lookup/master_detail"}),": ",(0,t.jsx)(n.code,{children:"ISBLANK(FieldName._id)"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Field type ",(0,t.jsx)(n.code,{children:"boolean"}),": ",(0,t.jsx)(n.code,{children:"FieldName"}),"."]}),"\n"]})}),"\n",(0,t.jsx)(n.h3,{id:"not",children:"NOT"}),"\n",(0,t.jsx)(n.p,{children:"Returns FALSE for TRUE, and TRUE for FALSE."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," NOT(logical expression)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.code,{children:"boolean"})," The expression you want to evaluate."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(NOT(Status = "Closed"), ROUND(NOW()-CreatedDate, 0), null)\n'})}),"\n",(0,t.jsx)(n.p,{children:"Checks if the variable is unhandled; if so, it calculates the number of days it has been unhandled by subtracting the creation date and time from the current date and time. The result is the number of unhandled days rounded to zero decimal places. If the variable is handled, this field is empty."}),"\n",(0,t.jsx)(n.h3,{id:"or",children:"OR"}),"\n",(0,t.jsx)(n.p,{children:"Returns TRUE if any expression is true. If all expressions are false, it returns FALSE. This function is an alternative to the || (OR) operator."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," OR(logical1, logical2...)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Logical Expression 1:"})," ",(0,t.jsx)(n.code,{children:"boolean"})," The first formula expression you want to evaluate that returns a Boolean value."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Logical Expression 2:"})," ",(0,t.jsx)(n.code,{children:"boolean"})," The second formula expression you want to evaluate that returns a Boolean value."]}),"\n",(0,t.jsx)(n.li,{children:"... Additional expressions that return Boolean values."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(OR(Priority="High", Status="New"), ROUND(NOW()-CreatedDate, 0), null)\n'})}),"\n",(0,t.jsx)(n.p,{children:'If the case\'s Status is "New" or the Priority is "High," this formula returns the number of days the case has been unhandled. If the case was opened today, the field shows zero.'}),"\n",(0,t.jsx)(n.h2,{id:"mathematical-functions",children:"Mathematical Functions"}),"\n",(0,t.jsx)(n.h3,{id:"abs",children:"ABS"}),"\n",(0,t.jsx)(n.p,{children:"Calculates the absolute value of a number. The absolute value of a number is the number without its sign."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ABS(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," A merge field, expression, or other value from which you wish to remove the sign."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ABS(ExpectedRevenue)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Calculates the positive value of the Expected Revenue amount, regardless of whether it is positive or negative."}),"\n",(0,t.jsx)(n.h3,{id:"ceiling",children:"CEILING"}),"\n",(0,t.jsx)(n.p,{children:"Rounds a number up to the nearest integer; for negative numbers, it first rounds the positive part to the nearest integer and then adds the negative sign prefix."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," CEILING(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," The field or expression you wish to round."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"CEILING(2.3)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns 3, as 2.3 is rounded up to the nearest integer."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"CEILING(-2.3)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns -3, as -2.3 is rounded up to the nearest positive integer below zero and then given a negative sign."}),"\n",(0,t.jsx)(n.h3,{id:"exp",children:"EXP"}),"\n",(0,t.jsx)(n.p,{children:"Returns a value equal to the power of e raised to the specified number."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," EXP(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," A numeric field or value (like 5)."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"EXP(3)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula returns a value equal to e raised to the power of three."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"Principal__c  EXP(Rate__c  Years__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula calculates compound interest based on a custom currency field for principal, a custom percentage field for rate, and a custom numeric field for years."}),"\n",(0,t.jsx)(n.h3,{id:"floor",children:"FLOOR"}),"\n",(0,t.jsx)(n.p,{children:"Returns a number rounded down to the nearest integer; for negative numbers, it rounds the integer part down and then adds the negative sign."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," FLOOR(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," A numeric field or value (like 5.245)."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"FLOOR(2.5)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns 2, as 2.5 is rounded down to the nearest integer."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"FLOOR(-2.5)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns -2, as -2.5 is rounded down to the nearest negative number above zero."}),"\n",(0,t.jsx)(n.h3,{id:"ln",children:"LN"}),"\n",(0,t.jsx)(n.p,{children:"Returns the natural logarithm of a specified value. The natural logarithm is based on the constant e (value 2.71828182845904)."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," LN(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," The field or expression whose natural logarithm you wish to obtain. Note: The LN function is the inverse of the EXP function."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"LN(10)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the natural logarithm of 10, which is approximately 2.30."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"LN(Value__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the natural logarithm of a custom numeric field named Value."}),"\n",(0,t.jsx)(n.h3,{id:"log",children:"LOG"}),"\n",(0,t.jsx)(n.p,{children:"Returns the base 10 logarithm of a number."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," LOG(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," The field or expression from which you want to calculate the base 10 logarithm."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"LOG(Salary__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Calculates the logarithm of someone's salary."}),"\n",(0,t.jsx)(n.p,{children:"In this example, Salary is a custom currency field."}),"\n",(0,t.jsx)(n.h3,{id:"max",children:"MAX"}),"\n",(0,t.jsx)(n.p,{children:"Returns the largest number in a series of numbers."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," MAX(number, number, ...)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Number:"})," ",(0,t.jsx)(n.code,{children:"number"})," One of the fields or expressions from which you wish to retrieve the largest number."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Number:"})," ",(0,t.jsx)(n.code,{children:"number"})," Another field or expression from which you wish to retrieve the largest number."]}),"\n",(0,t.jsx)(n.li,{children:"... More fields or expressions from which you wish to retrieve the largest number."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Examples:"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"1. Service Fee"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MAX(0.06 * Total_Cost__c , Min_Service_Charge__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"2. Book Royalties"})})}),"\n",(0,t.jsx)(n.p,{children:"This example of a formula field calculates a service fee, taking the greater of 6% of the total cost or a minimum service charge. Note that the minimum service charge is a custom currency field with a default value of $15. However, if the minimum service charge is not always the same amount, you could make that field a formula field."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MAX(0.10 * Pages__c, (Retail_Price__c * 0.07) * Total_Sold__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"3. Commission"})})}),"\n",(0,t.jsx)(n.p,{children:"This formula determines the royalties to be paid on a book. It shows the larger of two amounts: $0.07 per book sold or $0.10 per page. It assumes you have custom numeric fields named Pages and Total Sold and a custom currency field named Retail Price."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MAX($user.Commission_Percent__c * Price, Price * Account_Discount__c, 100)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This example determines the commission for an asset record based on the larger of the user's price commission percentage, the price times the discount percentage stored as an amount, or $100. This example assumes you have two custom percentage fields for the user and the asset."}),"\n",(0,t.jsx)(n.h3,{id:"mceiling",children:"MCEILING"}),"\n",(0,t.jsx)(n.p,{children:"Rounds a number up to the nearest integer; for negative numbers, it rounds up to the nearest negative integer based on value size."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," MCEILING(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," The field or expression you wish to calculate."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MCEILING(2.3)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns 3, as 2.3 is rounded up to the nearest integer."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MCEILING(-2.3)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns -3, as for negative numbers, -2.3 is rounded down to the nearest negative integer."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"The MCEILING function is similar to CEILING when the input parameter is a positive number, but differs for negative numbers as the latter first rounds up the positive value before adding the negative sign prefix."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"mfloor",children:"MFLOOR"}),"\n",(0,t.jsx)(n.p,{children:"Rounds a number down to the nearest integer; for negative numbers, it rounds down to the nearest negative integer based on value size."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," MFLOOR(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," The field or expression you wish to calculate."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MFLOOR(2.3)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns 2, as 2.3 is rounded down to the nearest integer."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MFLOOR(-2.3)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns -3, as for negative numbers, -2.3 is rounded down to the nearest negative integer."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"The MFLOOR function is similar to FLOOR when the input parameter is a positive number, but differs for negative numbers as the latter first rounds down the positive value before adding the negative sign prefix."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"min",children:"MIN"}),"\n",(0,t.jsx)(n.p,{children:"Returns the smallest number in a series of numbers."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," MIN(number, number, ...)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Number:"})," ",(0,t.jsx)(n.code,{children:"number"})," One of the fields or expressions from which you wish to retrieve the smallest number."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Number:"})," ",(0,t.jsx)(n.code,{children:"number"})," Another field or expression from which you wish to retrieve the smallest number."]}),"\n",(0,t.jsx)(n.li,{children:"... More fields or expressions from which you wish to retrieve the smallest number."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MIN(250, Contribution__c /2)\n"})}),"\n",(0,t.jsx)(n.p,{children:"In this example, the formula determines the amount to contribute in an employee 401K match based on half of the employee's contribution or $250, whichever is less. It assumes you have a custom currency field named Contribution."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MIN(Gross__c * Bonus_Percent__c, \u200b Performance__c / Number_of_Employees__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This example determines the employee bonus amount based on the lesser of two amounts: the employee's total times the bonus percentage or the company's performance bonus amount divided among all employees. It also assumes you have a custom numeric field named Number of Employees, a custom percentage field named Bonus Percent, and custom currency fields for the employee's Gross and the company's Performance."}),"\n",(0,t.jsx)(n.h3,{id:"mod",children:"MOD"}),"\n",(0,t.jsx)(n.p,{children:"Returns the remainder of a number divided by a specified divisor."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," MOD(number, divisor)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Number:"})," ",(0,t.jsx)(n.code,{children:"number"})," The field or expression you wish to divide."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Divisor:"})," ",(0,t.jsx)(n.code,{children:"number"})," The number to be used as a divisor."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MOD(3, 3)MOD(4, 3)MOD(123, 100)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns 0; returns 1; returns 23."}),"\n",(0,t.jsx)(n.p,{children:"You might want to prevent users from scheduling meetings on Saturdays or Sundays. Apply this validation rule example to a custom date field named My Date."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"CASE(MOD(My_Date__c - DATE(1900, 1, 7), 7),\n0, 0,\n6, 0,\n1) = 0\n"})}),"\n",(0,t.jsx)(n.p,{children:'When the value of My Date is not within the range of Monday to Friday, this example returns the error message: "My Date is not a weekday."'}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Do not use a value of 0 as a divisor."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"round",children:"ROUND"}),"\n",(0,t.jsx)(n.p,{children:"Returns a number closest to the specified number, constrained by the specified number of digits."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ROUND(number, decimal places)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Number:"})," ",(0,t.jsx)(n.code,{children:"number"})," The field or expression you wish to round."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Decimal Places:"})," ",(0,t.jsx)(n.code,{children:"number"})," The number of decimal places you wish to consider when rounding."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ROUND (1.5, 0) = 2ROUND (1.2345, 0) = 1ROUND (-1.5, 0) = -2ROUND (225.49823, 2) = 225.50\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ROUND( Amount-Amount* Discount_Percent__c,2)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula can be used to calculate the discounted amount of a business opportunity, rounded to two decimal places. This example is a numeric formula field for a business opportunity, using a custom percentage field named Discount Percent."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u25a0 Enter zero for the number of digits to round the value to the nearest integer."}),"\n",(0,t.jsx)(n.p,{children:"\u25a0 The function automatically rounds the number according to the decimal places you specify. For example, when you enter 1.49999, a custom numeric field set for two decimal places stores it as 1.50."}),"\n",(0,t.jsx)(n.p,{children:"\u25a0 The function uses a rounding algorithm where half values always round up to the next digit. For example, 1.45 rounds up to 1.5. \u20131.45 rounds up to \u20131.5."}),"\n",(0,t.jsx)(n.p,{children:"\u25a0 The displayed number on the interface depends on the decimal places selected when defining the field. Here, the number of digits refers to the number of decimal places considered during formula calculation rounding."}),"\n",(0,t.jsx)(n.p,{children:"\u25a0 If the first parameter value is negative, it will round the positive part and then add the negative sign prefix as the final return value, rather than rounding the value as the JavaScript programming language's Math.round function does."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"sqrt",children:"SQRT"}),"\n",(0,t.jsx)(n.p,{children:"Returns the positive square root of a given number."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," SQRT(number)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"number"})," The field or expression whose square root you wish to calculate."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"SQRT(25)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the square root of 25 (which is 5)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"SQRT(Amplitude__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the square root of a custom numeric field representing the amplitude of an earthquake."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u25a0 Calculating the square root of a negative number is not supported and will return an error message."}),"\n",(0,t.jsx)(n.p,{children:"\u25a0 You can avoid division by zero by including the IF function, for example: IF( Amplitude__c >= 0, SQRT( Amplitude__c ), null)."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"text-functions",children:"Text Functions"}),"\n",(0,t.jsx)(n.h3,{id:"begins",children:"BEGINS"}),"\n",(0,t.jsx)(n.p,{children:"Determines if text begins with specific characters, returning TRUE if it does. Otherwise, it returns FALSE."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," BEGINS(text, compare_text)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The full text or field you want to compare."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"compare_text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text fragment for comparison."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'IF(BEGINS(Product_type__c, "ICU"), "Medical", "Technical")\n'})}),"\n",(0,t.jsx)(n.p,{children:'If the custom text field Product_type begins with "ICU", this example returns "Medical". For all other products, it returns "Technical".'}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 This function is case-sensitive, so ensure the compare_text value's casing is correct."}),(0,t.jsx)(n.p,{children:'\u25a0 When used in validation or workflow rules, empty fields are considered valid. For instance, if your validation rule tests if an asset\'s serial number begins with "3", all assets with an empty serial number are considered valid.'})]}),"\n",(0,t.jsx)(n.h3,{id:"br",children:"BR"}),"\n",(0,t.jsx)(n.p,{children:"Inserts a line break in a text string."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," BR()"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'CASE(ShippingCountry, "USA", ShippingStreet & BR() & ShippingCity & ", " & ShippingState & " " & ShippingPostalCode & BR() & ShippingCountry, "France", ShippingStreet & BR() & ShippingPostalCode & " " & ShippingCity & BR() & ShippingCountry, "etc")\n'})}),"\n",(0,t.jsx)(n.p,{children:"This formula field displays a formatted mailing address for contacts, potentially including spaces and line breaks at appropriate places, depending on the country/region."}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 Do not remove the parentheses following the function name."}),(0,t.jsx)(n.p,{children:"\u25a0 Keep the parentheses empty. They should not contain any values."}),(0,t.jsx)(n.p,{children:"\u25a0 Do not forget to add concatenation operators: & on either side of BR()."})]}),"\n",(0,t.jsx)(n.h3,{id:"casesafeid",children:"CASESAFEID"}),"\n",(0,t.jsx)(n.p,{children:"Converts a 15-character ID to a case-sensitive 18-character ID."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," CASESAFEID(id)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"text"})," The object ID."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"CASESAFEID(Id)\n"})}),"\n",(0,t.jsx)(n.p,{children:'This formula replaces a 15-character ID with an 18-character, case-sensitive ID. Assuming the Id value is abcdefghijklmno, the formula returns "abcdefghijklmnoAAA".'}),"\n",(0,t.jsx)(n.h3,{id:"contains",children:"CONTAINS"}),"\n",(0,t.jsx)(n.p,{children:"Compares two text parameters, returning TRUE if the first contains the second. Otherwise, it returns FALSE."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," CONTAINS(text, compare_text)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The original full text."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"compare_text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text fragment for comparison."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(CONTAINS(Product_Type__c, "part"), "Parts", "Service")\n'})}),"\n",(0,t.jsx)(n.p,{children:'This formula checks the contents of the custom text field Product_Type and returns "Parts" for any product containing the word "part". Otherwise, it returns "Service". Note that if the Product_Type field contains "Part" or "PART", this formula will return "Services".'}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 This function is case-sensitive, so ensure the compare_text value's casing is correct."}),(0,t.jsx)(n.p,{children:'\u25a0 When used in validation or workflow rules, empty fields are considered valid. For instance, if your validation rule tests if an asset\'s serial number contains "A", all assets with an empty serial number are considered valid.'}),(0,t.jsx)(n.p,{children:"\u25a0 The CONTAINS function does not support multi-select picklists."})]}),"\n",(0,t.jsx)(n.h3,{id:"find",children:"FIND"}),"\n",(0,t.jsx)(n.p,{children:"Returns the position of a specified string within a text string, represented as a number."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," FIND(search_text, text[, start_num])"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"search_text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The string to find."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The field or expression to search."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"start_num:"})," ",(0,t.jsx)(n.code,{children:"number"})," The character number from the left to start the search."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'FIND(" ", Street)\n'})}),"\n",(0,t.jsx)(n.p,{children:"Returns the position of the first space in the Street field. This number can be used to determine the length of a street address, so that you can separate the street address from the street name in an address field."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'SUBSTITUTE(Email, LEFT(Email, FIND("@", Email)), "www.")\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Finds the position of the @ symbol in a personal email address to determine the length of text to replace with \u201c",(0,t.jsx)(n.a,{href:"http://www.%E2%80%9D",children:"www.\u201d"}),","," thereby deriving its web address."]}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 Ensure to remove the brackets, [ and ], before the validation formula."}),(0,t.jsx)(n.p,{children:"\u25a0 If the text parameter references an empty field, the formula field displays \u201c0\u201d."}),(0,t.jsx)(n.p,{children:"\u25a0 Your search_text parameter is case-sensitive and cannot include any wildcards."}),(0,t.jsx)(n.p,{children:"\u25a0 If no result is returned after the search, the field will display \u201c0\u201d."}),(0,t.jsx)(n.p,{children:"\u25a0 The start_num parameter is optional. If no start_num value is entered, the formula uses the value 1 or the first character in the string."}),(0,t.jsx)(n.p,{children:"\u25a0 If the start_num is not greater than zero, the field will display \u201c0\u201d."}),(0,t.jsx)(n.p,{children:"\u25a0 If the start_num is greater than the length of the text, the field will display \u201c0\u201d."}),(0,t.jsx)(n.p,{children:"\u25a0 Remember that some fields, like URL fields, are unique because the system automatically appends \u201chttp://\u201d to the beginning of your entered text."}),(0,t.jsx)(n.p,{children:"\u25a0 Note that the first character in the string is specified as 1 (not 0)."})]}),"\n",(0,t.jsx)(n.h3,{id:"hyperlink",children:"HYPERLINK"}),"\n",(0,t.jsx)(n.p,{children:"Creates a link from specified text to a specified URL that is clickable."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," HYPERLINK(url, friendly_name [,target])"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"url:"})," ",(0,t.jsx)(n.code,{children:"text"})," The URL."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"friendly_name:"})," ",(0,t.jsx)(n.code,{children:"text"})," The link text."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"target:"})," ",(0,t.jsx)(n.code,{children:"text"})," The window or frame in which to display the content."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'HYPERLINK("/00U/e?retURL=%2F006x0000001T8Om&what_id=" & Id, "Create Event")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Adds a link named "Create Event", which, when clicked, creates a new event associated with the current target.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'HYPERLINK("http://servername/call?id=" & Id & "&phone=" & Phone, Phone)\n'})}),"\n",(0,t.jsx)(n.p,{children:'Creates a clickable phone number field that, when clicked, automatically dials the number. In this example, replace "servername" and "call" with your dialing tool name and its dialing command. Insert the identifier of the contact, opportunity, or customer record in the merge field Id. The first Phone merge field informs the dialing tool of the number to dial, and the last Phone merge field uses the value of the Phone field as the clickable text for dialing.'}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 Hyperlink formula fields are of the text type."}),(0,t.jsxs)(n.p,{children:["\u25a0 Include protocols and URLs in quotation marks, like in ",(0,t.jsx)(n.code,{children:'HYPERLINK("http://www.cnet.com", "cnet")'}),"."]}),(0,t.jsx)(n.p,{children:"\u25a0 Avoid using text functions like LEN, LEFT, or RIGHT in the results of the HYPERLINK function."}),(0,t.jsx)(n.p,{children:"\u25a0 URLs should not contain JavaScript for increased security of your organization."}),(0,t.jsxs)(n.p,{children:["\u25a0 Use relative links to link to in-site pages. If your full link is ",(0,t.jsx)(n.code,{children:"https://yourInstance.steedos.com/a/b"}),', the relative link is "/a/b". Relative links ensure that hyperlinks work on all in-site pages. Be sure to add a forward slash "/" before the relative URL.']}),(0,t.jsx)(n.p,{children:"\u25a0 If the start_num is not greater than zero, the field will display \u201c0\u201d."}),(0,t.jsx)(n.p,{children:"\u25a0 If the start_num is greater than the length of the text, the field will display \u201c0\u201d."}),(0,t.jsx)(n.p,{children:"\u25a0 Remember that some fields, like URL fields, are unique because the system automatically appends \u201chttp://\u201d to the beginning of your entered text."}),(0,t.jsx)(n.p,{children:"\u25a0 Steedos currently does not support displaying the return value of this function as a link on the interface."})]}),"\n",(0,t.jsx)(n.h3,{id:"includes",children:"INCLUDES"}),"\n",(0,t.jsx)(n.p,{children:"Determines if any values selected in a multi-select picklist field are equal to the specified text literal."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," INCLUDES(multiselect_picklist_field, text_literal)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"multiselect_picklist_field:"})," ",(0,t.jsx)(n.code,{children:"select"})," The name of the picklist field."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text_literal:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text to use for comparison."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Example:"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'INCLUDES(Hobbies__c, "Golf")\n'})}),"\n",(0,t.jsx)(n.p,{children:'If one of the values selected in the Hobbies custom multi-select picklist field is "Golf", INCLUDES(Hobbies__c, "Golf") returns TRUE.'}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 This function only supports multi-select picklist fields. To use a single-select picklist field, use ISPICKVAL."}),(0,t.jsx)(n.p,{children:"\u25a0 ISBLANK can be used to determine if a picklist field is empty."})]}),"\n",(0,t.jsx)(n.h3,{id:"ispickval",children:"ISPICKVAL"}),"\n",(0,t.jsx)(n.p,{children:"Determines if a picklist field's value is equal to the specified text literal."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," ISPICKVAL(picklist_field, text_literal)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"picklist_field:"})," ",(0,t.jsx)(n.code,{children:"select"})," The name of the picklist field."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text_literal:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text to use for comparison."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Examples:"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"1. Contract Activation"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(ISPICKVAL(Status, "Activated"), NOW()-ActivatedDate, null)\n'})}),"\n",(0,t.jsx)(n.p,{children:'Calculates the number of days since a contract was activated. If the contract status is not "Activated", this field is empty.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"2. Commission Amount"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'IF(ISPICKVAL(StageName, "Closed Won"), ROUND(Amount * 0.02, 2), 0)\n'})}),"\n",(0,t.jsx)(n.p,{children:'This example calculates the commission amount for any opportunity at the "Closed Won" stage. The value of this field will be 0.02 times the amount of any won opportunities. For opportunities that are either open or lost, the commission value is zero.'}),"\n",(0,t.jsx)(n.h2,{id:"text-functions-1",children:"Text Functions"}),"\n",(0,t.jsx)(n.h3,{id:"begins-1",children:"BEGINS"}),"\n",(0,t.jsx)(n.p,{children:"Determines whether text begins with specific characters, returning TRUE if it does. Otherwise, returns FALSE."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," BEGINS(text, compare_text)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The full text or field you want to compare."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"compare_text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text fragment for comparison."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'IF(BEGINS(Product_type__c, "ICU"), "Medical", "Technical")\n'})}),"\n",(0,t.jsx)(n.p,{children:'If the custom text field Product_type begins with "ICU", this example returns "Medical". For all other products, it returns "Technical".'}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 This function is case-sensitive, so ensure the compare_text value's casing is correct."}),(0,t.jsx)(n.p,{children:'\u25a0 When used in validation or workflow rules, empty fields are considered valid. For instance, if your validation rule tests if an asset\'s serial number begins with "3", all assets with an empty serial number are considered valid.'})]}),"\n",(0,t.jsx)(n.h3,{id:"left",children:"LEFT"}),"\n",(0,t.jsx)(n.p,{children:"Returns a specified number of characters from the beginning of a text string."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," LEFT(text, num_chars)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The field or expression you want to return."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"num_chars:"})," ",(0,t.jsx)(n.code,{children:"number"})," The number of characters you want to return from the left side."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'TRIM(LEFT(LastName, 5)) & "-" & TRIM(RIGHT(SSN__c, 4))\n'})}),"\n",(0,t.jsx)(n.p,{children:"This formula displays the first five characters of the name and the last four characters of the social security number (separated by a hyphen). Note that this example uses a custom text field named SSN."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"If the num_chars value is less than zero, the formula will replace it with zero."})}),"\n",(0,t.jsx)(n.h3,{id:"len",children:"LEN"}),"\n",(0,t.jsx)(n.p,{children:"Returns the number of characters in a specified text string."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," LEN(text)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.code,{children:"text"})," The field or expression whose length you want to return."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"LEN(PartNumber__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula returns the number of characters in the Product Code field."}),"\n",(0,t.jsx)(n.h3,{id:"lower",children:"LOWER"}),"\n",(0,t.jsx)(n.p,{children:"Converts all letters in a specified text string to lowercase. Any character that is not a letter is not affected. Regional rules are applied if provided."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," LOWER(text)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.code,{children:"text"})," The field or text you want to convert to lowercase."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'LOWER("MYCOMPANY.COM")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns "mycompany.com."'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"LOWER(TickerSymbol)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the text in Ticker Symbol in lowercase characters."}),"\n",(0,t.jsx)(n.h3,{id:"lpad",children:"LPAD"}),"\n",(0,t.jsx)(n.p,{children:"Inserts specified characters on the left side of a text string."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," LPAD(text, padded_length, pad_string)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text is the field or expression into which you want to insert characters on the left."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"padded_length:"})," ",(0,t.jsx)(n.code,{children:"number"})," Padded length is the total number of characters to return in the text."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"pad_string:"})," ",(0,t.jsx)(n.code,{children:"text"})," Pad string is the character(s) to be inserted. Pad string is required; you can pass an empty string to indicate no padding."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Examples:"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"1. Field Name: Truncated"})})}),"\n",(0,t.jsx)(n.p,{children:"If the length of the value in the text exceeds the pad string, then the text is truncated to the size of the pad length."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'LPAD(Name, 20, "")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Truncates the Name field after 20 characters. For instance, if the initial value is "mycompany.com", the returned value is "mycompany.com"; if the initial value is "mycompany_is_good_in_china.com", the returned value is "mycompany_is_good_in".'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"2. My_Company: No Change"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"LPAD('my_company.com', 14, 'z')\n"})}),"\n",(0,t.jsx)(n.p,{children:'Returns "my_company.com" without any change, as it contains 14 characters.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"3. Field Name with Z Padding"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'LPAD("my_company.com", 15, "z")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns the name "zmy_company.com".'}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"Leading spaces are not ignored."})}),"\n",(0,t.jsx)(n.h3,{id:"mid",children:"MID"}),"\n",(0,t.jsx)(n.p,{children:"Returns a specified number of characters from the middle of a text string, starting at the position you specify."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," MID(text, start_num, num_chars)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The field or expression to use when returning characters."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"start_num:"})," ",(0,t.jsx)(n.code,{children:"number"})," The number of characters from the left to start the return (as the starting position of characters)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"num_chars:"})," ",(0,t.jsx)(n.code,{children:"number"})," The total number of characters to return."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MID(Division, 3, 4)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns four characters starting from the third character on the left in the Division name. For user records, this represents a department code."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'MID("ABCDEFGH", 3, 4)\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns "CDEF".'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'MID("ABCDEFGH", 0, 10)\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns "H", indicating the start position is from 0 instead of 1. Passing a value of 0 as the starting position will not return values as expected.'}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"Note that the first character in the text is specified as 1 (not 0)."})}),"\n",(0,t.jsx)(n.h3,{id:"right",children:"RIGHT"}),"\n",(0,t.jsx)(n.p,{children:"Returns a specified number of characters from the right side of a text string."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," RIGHT(text, num_chars)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The field or expression you want to return."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"num_chars:"})," ",(0,t.jsx)(n.code,{children:"number"})," The number of characters you want to return from the right side."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'TRIM(LEFT(LastName, 5)) & "-" & TRIM(RIGHT(SSN__c, 4))\n'})}),"\n",(0,t.jsx)(n.p,{children:"Displays the first five characters of the last name and the last four characters of the social security number (separated by a hyphen). Note that this example assumes you have a text custom field named SSN."}),"\n",(0,t.jsx)("alert",{type:"info",children:(0,t.jsx)(n.p,{children:"If the num_chars value is less than zero, the formula will replace it with zero."})}),"\n",(0,t.jsx)(n.h3,{id:"rpad",children:"RPAD"}),"\n",(0,t.jsx)(n.p,{children:"Inserts specified characters on the right side of a text string."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," RPAD(text, padded_length, pad_string)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text is the field or expression into which you want to insert characters on the right."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"padded_length:"})," ",(0,t.jsx)(n.code,{children:"number"})," Padded length is the total number of characters to return in the text."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"pad_string:"})," ",(0,t.jsx)(n.code,{children:"number"})," Pad string is the character(s) to be inserted. Pad string is required; you can pass an empty string to indicate no padding. If the length of the value in the text exceeds the pad string, then the text is truncated to the size of the pad length."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Examples:"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"1. Field Name: Truncated"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'RPAD(Name, 20, "")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Truncates the Name field after 20 characters. For instance, if the initial value is "mycompany.com", the returned value is "mycompany.com"; if the initial value is "mycompany_is_good_in_china.com", the returned value is "mycompany_is_good_in".'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"2. My_Company: No Change"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"RPAD('my_company.com', 14, 'z')\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns \u201cmy_company.com\u201d without any change, as it contains 14 characters."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"3. Field Name with Z Padding"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'RPAD("my_company.com", 15, "z")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns the name "my_company.comz".'}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 Trailing spaces are not ignored."}),(0,t.jsx)(n.p,{children:"\u25a0 Truncation of characters occurs from the right side, preserving the left portion, similar to the LPAD function."})]}),"\n",(0,t.jsx)(n.h3,{id:"substitute",children:"SUBSTITUTE"}),"\n",(0,t.jsx)(n.p,{children:"Replaces old text with new text in a text string."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," SUBSTITUTE(text, old_text, new_text)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The field or value in which you want to replace values."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"old_text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text to be replaced."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"new_text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The text to replace the old text with."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'SUBSTITUTE(Name, "Coupon", "Discount")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns the name of an opportunity containing the term "Coupon", replacing "Coupon" in the name with "Discount".'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'SUBSTITUTE(Email, LEFT(Email, FIND("@", Email)), "www.")\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Finds the position of the @ symbol in a personal email address to determine the length of text to replace with \u201c",(0,t.jsx)(n.a,{href:"http://www.%E2%80%9D",children:"www.\u201d"}),",",' thereby deriving its web address. For example, if the Email value is "',(0,t.jsx)(n.a,{href:"mailto:abc@steedos.cn",children:"abc@steedos.cn"}),'", running the formula will return "',(0,t.jsx)(n.a,{href:"http://www.steedos.cn",children:"www.steedos.cn"}),'".']}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 Each term within quotes is case-sensitive."}),(0,t.jsx)(n.p,{children:"\u25a0 If the old text appears multiple times, each occurrence of the old text will be replaced with the provided new text value, even if this results in duplicates."})]}),"\n",(0,t.jsx)(n.h3,{id:"text",children:"TEXT"}),"\n",(0,t.jsx)(n.p,{children:"Converts percentage, number, date, datetime, or currency type fields to text anywhere in a formula."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," TEXT(value)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.code,{children:"number/date/datetime/select"})," The field or expression you want to convert to text format."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"TEXT(ExpectedRevenue)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"advanced-functions",children:"Advanced Functions"}),"\n",(0,t.jsx)(n.h3,{id:"regex",children:"REGEX"}),"\n",(0,t.jsx)(n.p,{children:"Compares a text field against a regular expression, returning TRUE if it matches. Otherwise, it returns FALSE. A regular expression is a string that describes the format of a string according to certain syntax rules."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," REGEX(text, regex_text)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The full text or field you want to compare."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"regex_text:"})," ",(0,t.jsx)(n.code,{children:"text"})," The regular expression you want to match."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Boolean"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Validation Rule Example:"})})}),"\n",(0,t.jsxs)(n.p,{children:["This example ensures that a field named ID matches a regular expression representing an ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"ID card number"})})," in the format 310000YYYYMMDD0000."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'NOT(REGEX(ID, "[1-9][0-9]{5}(19|20)[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}([0-9]|x|X)"))\n'})}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"\u25a0 The syntax for regular expressions is based on Java Platform SE 6 syntax. However, the escape character () is not supported, and double backslashes (\\) are also not supported. To match special symbols, use square brackets, e.g., to match a period '.', write '[.]'."}),(0,t.jsxs)(n.p,{children:["\u25a0 The regex engine in formulas matches the entire string, not just searching for a match within the string. For example, if you are searching for the name Marc Benioff, then the regular expression .",(0,t.jsx)(n.em,{children:"Marc Benioff."})," will find a match in: ",(0,t.jsx)(n.code,{children:"According to Marc Benioff, the social enterprise increases customer success."})," Using the regular expression ",(0,t.jsx)(n.code,{children:"Marc Benioff"})," will only match the following string: ",(0,t.jsx)(n.code,{children:"Marc Benioff"})]}),(0,t.jsx)(n.p,{children:"\u25a0 The regex engine in formulas matches the entire string, meaning the start (^) and end ($) placeholders are implicitly placed at the start and end of the expression. You don't need to add these placeholders."}),(0,t.jsx)(n.p,{children:"\u25a0 Capture groups and replacements will be ignored."}),(0,t.jsx)(n.p,{children:"\u25a0 \\w, \\d, and other such expressions are not supported; use [a-zA-Z0-9_], [0-9] instead."})]}),"\n",(0,t.jsx)(n.h2,{id:"text-functions-2",children:"Text Functions"}),"\n",(0,t.jsx)(n.h3,{id:"trim",children:"TRIM"}),"\n",(0,t.jsx)(n.p,{children:"Removes spaces and tabs from the beginning and end of a text string."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," TRIM(text)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"text"})," Replace text with the field or expression you want to trim."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'TRIM(LEFT(LastName,5)) & "-" & RIGHT(FirstName, 1)\n'})}),"\n",(0,t.jsx)(n.p,{children:"Provides users with a network ID, which separates the first five characters of their surname and the first character of their first name with a hyphen."}),"\n",(0,t.jsx)(n.h3,{id:"upper",children:"UPPER"}),"\n",(0,t.jsx)(n.p,{children:"Converts all letters in a specified text string to uppercase. Any character that is not a letter is not affected. Regional rules are applied if provided."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," UPPER(text)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"text"})," Replace text with the field or expression you want to convert to uppercase."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Text"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'UPPER("mycompany.com")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns "MYCOMPANY.COM."'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'UPPER("Mycompany.com 123")\n'})}),"\n",(0,t.jsx)(n.p,{children:'Returns "MYCOMPANY.COM 123."'}),"\n",(0,t.jsx)(n.h3,{id:"value",children:"VALUE"}),"\n",(0,t.jsx)(n.p,{children:"Converts a text string to a number."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Usage:"})," VALUE(text)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter:"})," ",(0,t.jsx)(n.code,{children:"text"})," The field or expression you want to convert to a number."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Return Value:"})," Numeric"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Examples:"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"1. Lead Number"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"VALUE(Lead_Number__c)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the number corresponding to the text value in the auto-number field Lead Number. This can be useful if you want to use the Lead Number field in calculations. Note that the auto-number field is actually a text field and must be converted to a number field for numerical calculations."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"2. Lead Round-Robin Assignment"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"MOD(VALUE(Lead_Number__c), 3)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This formula applies to a custom formula field named Round_Robin_ID, assigning 0, 1, or 2 to each lead. The formula uses a custom auto-number field named Lead Number, which assigns a unique number starting at 1 to each lead. The MOD function divides the number of leads by the number of available lead queues (3 in this example) and then returns the remainder value 0, 1, or 2. Use the value of this formula field in your lead assignment rules to distribute lead records to different queues. For example:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Round_Robin_ID = 0 is assigned to Queue A"}),"\n",(0,t.jsx)(n.li,{children:"Round_Robin_ID = 1 is assigned to Queue B"}),"\n",(0,t.jsx)(n.li,{children:"Round_Robin_ID = 2 is assigned to Queue C"}),"\n"]}),"\n",(0,t.jsxs)("alert",{type:"info",children:[(0,t.jsx)(n.p,{children:"Ensure that the text in the VALUE function does not contain any special characters other than a decimal point (dot) or negative sign (hyphen). For example, the formula VALUE(Text_field__c) produces the following results:"}),(0,t.jsx)(n.p,{children:"\u25a0 If the text field is 123, the result is 123."}),(0,t.jsx)(n.p,{children:"\u25a0 If the text field is 0, it returns an error message."}),(0,t.jsx)(n.p,{children:"\u25a0 If the text field is blank, it returns an error message."}),(0,t.jsx)(n.p,{children:"\u25a0 If the text field is $123, it returns an error message."})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(96540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);