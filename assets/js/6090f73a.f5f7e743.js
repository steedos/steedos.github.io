"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2703],{98675:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var s=t(74848),n=t(28453);const i={title:"GraphQL"},c=void 0,a={id:"developer/service/service-api/service-graphql",title:"GraphQL",description:"You can call the GraphQL microservice to execute GraphQL queries on the server-side.",source:"@site/docs/developer/service/service-api/service-graphql.mdx",sourceDirName:"developer/service/service-api",slug:"/developer/service/service-api/service-graphql",permalink:"/developer/service/service-api/service-graphql",draft:!1,unlisted:!1,editUrl:"https://github.com/steedos/steedos-docs/tree/master/docs/developer/service/service-api/service-graphql.mdx",tags:[],version:"current",frontMatter:{title:"GraphQL"},sidebar:"developer",previous:{title:"Platform Service Reference",permalink:"/developer/service/service-api/"},next:{title:"Push Notification",permalink:"/developer/service/service-api/service-push"}},o={},p=[];function u(e){const r={code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:"You can call the GraphQL microservice to execute GraphQL queries on the server-side."}),"\n",(0,s.jsx)(r.p,{children:'If the GraphQL query needs to include the current user\'s permissions, the "user" attribute must be passed in.'}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'actions: {\n    graphqlQuery: {\n        rest: { method: \'GET\', path: \'/graphql\' },\n        // query a database in a microservice\n        async handler(ctx) {\n            return await this.broker.call(\'api.graphql\', {\n                query: `\n                    query {\n                    space_users(filters: ["user", "=", "${ctx.meta.user.userId}"]) {\n                        name\n                        organization__expand {\n                        name\n                        }\n                    }\n                    }\n                `},\n                // If the GraphQL query requires the current user\'s permissions to be included, the "user" attribute needs to be passed in.\n                {\n                    user: ctx.meta.user\n                }\n            );\n        },\n    }\n}\n'})})]})}function l(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>c,x:()=>a});var s=t(96540);const n={},i=s.createContext(n);function c(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);