"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7874],{10529:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(74848),a=t(28453);const r={},s="Template Rendering",l={id:"developer/micro-page/amis/tpl",title:"Template Rendering",description:"Welcome to the AMIS documentation. In this section, we will explore the template rendering feature in AMIS, which is a function borrowed from other template engines, aimed at providing flexibility in rendering text and data structures.",source:"@site/docs/developer/micro-page/amis/3_tpl.md",sourceDirName:"developer/micro-page/amis",slug:"/developer/micro-page/amis/tpl",permalink:"/developer/micro-page/amis/tpl",draft:!1,unlisted:!1,editUrl:"https://github.com/steedos/steedos-docs/tree/master/docs/developer/micro-page/amis/3_tpl.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"developer",previous:{title:"Data Scope and Data Chain",permalink:"/developer/micro-page/amis/data"},next:{title:"Data Mapping",permalink:"/developer/micro-page/amis/data_mapping"}},o={},c=[{value:"Template Strings: A Combination of Simplicity and Power",id:"template-strings-a-combination-of-simplicity-and-power",level:3},{value:"Template Strings",id:"template-strings",level:3},{value:"Rendering HTML with Template Strings",id:"rendering-html-with-template-strings",level:3},{value:"Expressions",id:"expressions",level:3},{value:"JavaScript Template Engine",id:"javascript-template-engine",level:3},{value:"Filters",id:"filters",level:2},{value:"Filter Parameters",id:"filter-parameters",level:3},{value:"Filter List Documentation",id:"filter-list-documentation",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"template-rendering",children:"Template Rendering"}),"\n",(0,i.jsx)(n.p,{children:"Welcome to the AMIS documentation. In this section, we will explore the template rendering feature in AMIS, which is a function borrowed from other template engines, aimed at providing flexibility in rendering text and data structures."}),"\n",(0,i.jsx)(n.h3,{id:"template-strings-a-combination-of-simplicity-and-power",children:"Template Strings: A Combination of Simplicity and Power"}),"\n",(0,i.jsx)(n.p,{children:"AMIS supports template strings, allowing you to embed variables directly into the text. Here's how to output simple text:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "type": "page",\n  "data": {\n    "text": "World!"\n  },\n  "body": "Hello ${text}"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"The output will be:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"Hello World!\n"})}),"\n",(0,i.jsx)(n.h3,{id:"template-strings",children:"Template Strings"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When parsing template strings, if the $ character is encountered, AMIS will attempt to parse the variable and replace the template variable.\nFor example, if the value of the ",(0,i.jsx)(n.code,{children:"name"})," variable is ",(0,i.jsx)(n.code,{children:"Rick"}),", and the template is ",(0,i.jsx)(n.code,{children:"my name is ${name}"}),", then the final template will be parsed as ",(0,i.jsx)(n.code,{children:"my name is Rick"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "type": "page",\n  "data": {\n    "name": "Rick"\n  },\n  "body": "my name is ${name}"\n}\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Supports chained value access: AMIS supports using ",(0,i.jsx)(n.code,{children:"."})," for chained value access, meaning you can access properties within nested objects. For example:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "type": "page",\n  "data": {\n    "name": "rick",\n    "company": {\n      "name": "baidu",\n      "department": "it"\n    }\n  },\n  "body": {\n    "type": "tpl",\n    "tpl": "my name is ${name}, I work for ${company.name}"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"rendering-html-with-template-strings",children:"Rendering HTML with Template Strings"}),"\n",(0,i.jsxs)(n.p,{children:["To render HTML, use the same data mapping syntax: ",(0,i.jsx)(n.code,{children:"${xxx}"}),". If the variable itself contains HTML, apply the ",(0,i.jsx)(n.code,{children:"raw"})," filter for correct rendering."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "text": "<b>World!</b>"\n  },\n  "type": "page",\n  "body": "<h1>Hello</h1> <span>${text|raw}</span>"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"expressions",children:"Expressions"}),"\n",(0,i.jsx)(n.p,{children:"Supports simple expressions and formula calls. For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "type": "tpl",\n  "tpl": "${xxx == 1 ? \'One\' : \'Others\'}"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"See the expressions chapter for details."}),"\n",(0,i.jsx)(n.h3,{id:"javascript-template-engine",children:"JavaScript Template Engine"}),"\n",(0,i.jsxs)(n.p,{children:["AMIS also supports the JavaScript template engine, internally using lodash template. Note the difference in accessing data scope variables: use ",(0,i.jsx)(n.code,{children:"data.xxx"})," instead of ",(0,i.jsx)(n.code,{children:"${xxx}"}),". This engine treats the data scope as the current code execution context, requiring ",(0,i.jsx)(n.code,{children:"data.xxx"})," to retrieve values."]}),"\n",(0,i.jsxs)(n.p,{children:["The syntax is similar to EJS, ",(0,i.jsx)(n.code,{children:"<% ... %>"})," indicates JavaScript statements. Familiarity with JavaScript makes page rendering a breeze. Additionally, several JavaScript methods are available, such as ",(0,i.jsx)(n.code,{children:"formatDate"}),", ",(0,i.jsx)(n.code,{children:"formatTimeStamp"}),", ",(0,i.jsx)(n.code,{children:"formatNumber"}),", and ",(0,i.jsx)(n.code,{children:"countDown"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:"Template strings and the JavaScript template engine cannot be used interchangeably. For example:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "type": "tpl",\n  "tpl": "${data.xxx === \'a\'}" // Wrong!\n}\n{\n  "type": "tpl",\n  "tpl": "${xxx === \'a\'}" // Correct\n}\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"filters",children:"Filters"}),"\n",(0,i.jsx)(n.p,{children:"Data filters are an extension of the data mapping feature, allowing for additional processing of retrieved data."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Basic Usage"}),": ",(0,i.jsx)(n.code,{children:"${xxx |filter1 }"}),", for example ",(0,i.jsx)(n.code,{children:"{name|trim}"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Filter Chaining"}),": Multiple filters can be chained, such as ",(0,i.jsx)(n.code,{children:"${xxx | filter1 | filter2 | ...}"}),", to implement complex data processing flows."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Function Call Syntax"}),": It is recommended to use function call syntax for data filtering, for example, replacing ",(0,i.jsx)(n.code,{children:"${xxx | html}"})," with ",(0,i.jsx)(n.code,{children:"${html(xxx)}"}),". Of course, nested calls like ",(0,i.jsx)(n.code,{children:"${trim(html(xxx))}"})," are possible."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"filter-parameters",children:"Filter Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["Filters can have parameters written into them:\n",(0,i.jsx)(n.code,{children:"${variable | filter:parameter1:parameter2:.....}"}),"\nIf I want to convert the input time to a specific format, I need to specify parameters such as: YYYY-MM-DD"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "type": "page",\n  "data": {\n    "now": 1586865590\n  },\n  "body": {\n    "type": "tpl",\n    "tpl": "now is ${now|date:YYYY-MM-DD}"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Of course, you can also use multiple filters with multiple parameters:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"${xxx [|filter1[:arg1][:arg2]...[|filter2...]] }\n"})}),"\n",(0,i.jsx)(n.h2,{id:"filter-list-documentation",children:"Filter List Documentation"}),"\n",(0,i.jsx)(n.p,{children:"There are many filters:"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"html, raw, json, toJson, toInt, toFloat, date, now, toDate, dateModify, fromNow, number, trim, percent, round, truncate, url_encode, url_decode, default, split, join, sortBy, topAndOther, unique, first, last, nth, pick, objectToArray, plus, minus, times, division, sum, abs, duration, bytes, asArray, lowerCase, upperCase, substring, base64Encode, base64Decode, isTrue, isFalse, isMatch, notMatch, isEquals, notEquals, map, filter"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For more details, see ",(0,i.jsx)(n.a,{href:"https://aisuda.bce.baidu.com/amis/zh-CN/docs/concepts/data-mapping#%E8%BF%87%E6%BB%A4%E5%99%A8",children:"AMIS Official Website - Filters"})]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(96540);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);