"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1393],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},56615:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={title:"API Authentication",sidebar_position:10},o=void 0,l={unversionedId:"developer/api/api-validate",id:"developer/api/api-validate",title:"API Authentication",description:"Before calling an api, api authentication must be performed first. Steedos supports multiple ways to authenticate apis, making api calls easy and flexible. Moreover, it can also achieve functions such as single sign-on, validating login status, and logging out, making interface calls even more flexible and convenient.",source:"@site/docs/developer/api/api-validate.mdx",sourceDirName:"developer/api",slug:"/developer/api/api-validate",permalink:"/developer/api/api-validate",draft:!1,editUrl:"https://github.com/steedos/steedos-docs/tree/master/docs/developer/api/api-validate.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"API Authentication",sidebar_position:10},sidebar:"developer",previous:{title:"Overview",permalink:"/developer/api/overview"},next:{title:"GraphQL API",permalink:"/developer/api/graphql-api"}},s={},p=[{value:"Call the login api to obtain user identity",id:"call-the-login-api-to-obtain-user-identity",level:2},{value:"Use current browser user identity verification",id:"use-current-browser-user-identity-verification",level:2},{value:"Use administrator API key verification",id:"use-administrator-api-key-verification",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Before calling an api, api authentication must be performed first. Steedos supports multiple ways to authenticate apis, making api calls easy and flexible. Moreover, it can also achieve functions such as single sign-on, validating login status, and logging out, making interface calls even more flexible and convenient."),(0,a.kt)("h2",{id:"call-the-login-api-to-obtain-user-identity"},"Call the login api to obtain user identity"),(0,a.kt)("p",null,"POST /accounts/password/login"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "user": { "email": "test@example.com"},\n  "password-unencrypted": "xxx"\n}\n')),(0,a.kt)("p",null,"This interface returns the token."),(0,a.kt)("p",null,"Use ${spaceId} and ${token} to verify"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"Authorization : Bearer ${spaceId},${token}\n")),(0,a.kt)("h2",{id:"use-current-browser-user-identity-verification"},"Use current browser user identity verification"),(0,a.kt)("p",null,"The current browser has user login information stored in the localStorage, which includes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"steedos:userId"),(0,a.kt)("li",{parentName:"ul"},"steedos:token"),(0,a.kt)("li",{parentName:"ul"},"steedos:spaceId")),(0,a.kt)("p",null,"Use ${spaceId} and ${token} to verify"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"Authorization : Bearer ${spaceId},${token}\n")),(0,a.kt)("h2",{id:"use-administrator-api-key-verification"},"Use administrator API key verification"),(0,a.kt)("p",null,"If you need to call the interface uniformly as an administrator, you can log in to the system as an administrator, and on the Settings-Advanced Settings-API Key menu, get the administrator's API Key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"Authorization : Bearer apikey,${apikey}\n")),(0,a.kt)("p",null,"The administrator API Key needs to be properly kept and this method can only be used for server-side calls."))}d.isMDXComponent=!0}}]);