"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1268],{31847:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=o(74848),i=o(28453);const r={},s="Configuration and Components",a={id:"developer/micro-page/amis/base_config",title:"Configuration and Components",description:"Welcome to the AMIS documentation. In this section, we will delve into the core concept of schema, which is the key element for defining the structure and behavior of components in AMIS.",source:"@site/docs/developer/micro-page/amis/1_base_config.md",sourceDirName:"developer/micro-page/amis",slug:"/developer/micro-page/amis/base_config",permalink:"/developer/micro-page/amis/base_config",draft:!1,unlisted:!1,editUrl:"https://github.com/steedos/steedos-docs/tree/master/docs/developer/micro-page/amis/1_base_config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"developer",previous:{title:"AMIS Low-Code Framework",permalink:"/developer/micro-page/amis/"},next:{title:"Data Scope and Data Chain",permalink:"/developer/micro-page/amis/data"}},c={},l=[{value:"The Simplest AMIS Configuration",id:"the-simplest-amis-configuration",level:3},{value:"The Core of Components: Type and Properties",id:"the-core-of-components-type-and-properties",level:3},{value:"Component Tree: The Foundation for Building Complex Interfaces",id:"component-tree-the-foundation-for-building-complex-interfaces",level:3},{value:"Tree Layout: The Key to Implementing Complex Pages",id:"tree-layout-the-key-to-implementing-complex-pages",level:3}];function d(e){const n={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configuration-and-components",children:"Configuration and Components"}),"\n",(0,t.jsx)(n.p,{children:"Welcome to the AMIS documentation. In this section, we will delve into the core concept of schema, which is the key element for defining the structure and behavior of components in AMIS."}),"\n",(0,t.jsx)(n.h3,{id:"the-simplest-amis-configuration",children:"The Simplest AMIS Configuration"}),"\n",(0,t.jsx)(n.p,{children:"An example of the most basic AMIS configuration is as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "type": "page",\n  "body": "Hello World!"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This is a piece of JSON configuration, at the heart of which are two fields: ",(0,t.jsx)(n.strong,{children:"type"})," and ",(0,t.jsx)(n.strong,{children:"body"}),". The ",(0,t.jsx)(n.strong,{children:"type"})," field is the most crucial part of an AMIS node, indicating that the current node needs to render a Page component. The ",(0,t.jsx)(n.strong,{children:"body"})," field, as an attribute of the Page component, is responsible for guiding how the component renders the page content."]}),"\n",(0,t.jsx)(n.h3,{id:"the-core-of-components-type-and-properties",children:"The Core of Components: Type and Properties"}),"\n",(0,t.jsxs)(n.p,{children:["In AMIS, the configuration of a component is always composed of a ",(0,t.jsx)(n.strong,{children:"type"})," field (identifying the current component) and other properties. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "type": "xxx",\n  ...other properties\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"component-tree-the-foundation-for-building-complex-interfaces",children:"Component Tree: The Foundation for Building Complex Interfaces"}),"\n",(0,t.jsx)(n.p,{children:"Let's look at a slightly more complex configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "type": "page",\n  "body": {\n    "type": "tpl",\n    "tpl": "Hello World!"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This configuration indicates through the ",(0,t.jsx)(n.strong,{children:"type"})," field that a component named Tpl, which is a template rendering component, will be rendered in the body content area. In ",(0,t.jsx)(n.strong,{children:"body"}),", besides the configuration object, it can also be an array, thus adding more components, such as divider and form components."]}),"\n",(0,t.jsx)(n.h3,{id:"tree-layout-the-key-to-implementing-complex-pages",children:"Tree Layout: The Key to Implementing Complex Pages"}),"\n",(0,t.jsx)(n.p,{children:"AMIS implements the production of complex pages through a tree structure, for example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Page\n \u251c\u2500\u2500 Toolbar\n \u2502 \u2514\u2500 Form \n \u251c\u2500\u2500 Grid \n \u2502 \u251c\u2500 Panel\n \u2502 \u2502 \u2514\u2500 Tabs\n \u2502 \u2502 \u2514\u2500 Chart\n \u2502 \u2514\u2500 Panel\n \u2502 \u2514\u2500 Chart\n \u2514\u2500\u2500 CRUD\n"})}),"\n",(0,t.jsx)(n.p,{children:"With this hierarchical combination, AMIS can easily achieve complex layout effects."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var t=o(96540);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);